version: '3.7'

services:
  minio:
    image: minio/minio:RELEASE.2024-03-21T23-13-43Z-cpuv1
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./minio-data/data-1:/data-1
      - ./minio-data/data-2:/data-2
      - ./minio-data/data-3:/data-3
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost:9000/minio/health/live"
        ]
      interval: 30s
      timeout: 20s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: "0.5"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: miniopassword
      MINIO_VOLUMES: "/data-{1...3}"
      MINIO_OPTS: "--console-address :9001"
      MINIO_CONFIG_ENV_FILE: "/etc/config.env"
    command: server --console-address ":9001" /data
    networks:
      - backend_backendnetwork
  mc:
    container_name: minio-client
    depends_on:
      - minio
    image: minio/mc
    deploy:
      resources:
        limits:
          cpus: "0.5"
    environment:
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=miniopassword
      - AWS_REGION=us-east-1
    entrypoint: >
      /bin/sh -c " until (/usr/bin/mc config host add minio http://minio:9000 minioadmin miniopassword) do echo '...waiting...' && sleep 1; done; 
      /usr/bin/mc mb minio/hive;
      /usr/bin/mc mb minio/logging/spark-events;
      /usr/bin/mc mb minio/data_services;
      tail -f /dev/null "
    networks:
      - backend_backendnetwork

networks:
  backend_backendnetwork:
    external: true

volumes:
  data-1:
  data-2:
  data-3:
